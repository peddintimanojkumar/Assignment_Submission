{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manup\\\\Desktop\\\\New folder\\\\my-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App({\n  size = 300,\n  dotSize = 14,\n  centerSize = 12,\n  duration = 10 // longer cycle for clarity\n}) {\n  const radius = Math.round(size * 0.36);\n\n  // 8 circle positions\n  const circle = Array.from({\n    length: 8\n  }, (_, i) => {\n    const angle = i * 45 * Math.PI / 180;\n    return {\n      x: Math.cos(angle) * radius,\n      y: Math.sin(angle) * radius\n    };\n  });\n\n  // diamond positions\n  const diamond = [{\n    x: 0,\n    y: -radius,\n    color: \"red\"\n  }, {\n    x: radius,\n    y: 0,\n    color: \"blue\"\n  }, {\n    x: 0,\n    y: radius,\n    color: \"purple\"\n  }, {\n    x: -radius,\n    y: 0,\n    color: \"orange\"\n  }, {\n    x: radius * 0.7,\n    y: -radius * 0.7,\n    color: \"blue\"\n  }, {\n    x: radius * 0.7,\n    y: radius * 0.7,\n    color: \"purple\"\n  }, {\n    x: -radius * 0.7,\n    y: radius * 0.7,\n    color: \"orange\"\n  }, {\n    x: -radius * 0.7,\n    y: -radius * 0.7,\n    color: \"red\"\n  }];\n\n  // Timing for dots\n  const dotTimes = [0, 0.3, 0.9, 1];\n\n  // Timing for center lines\n  const lineTimes = [0.35, 0.5, 0.7, 0.85];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"overlay-svg\",\n      width: size,\n      height: size,\n      viewBox: `${-size / 2} ${-size / 2} ${size} ${size}`,\n      children: [diamond.map((d, i) => /*#__PURE__*/_jsxDEV(motion.line, {\n        x1: 0,\n        y1: 0,\n        x2: d.x,\n        y2: d.y,\n        stroke: d.color,\n        strokeWidth: \"2\",\n        strokeDasharray: \"0, 300\",\n        animate: {\n          strokeDasharray: [\"0, 300\", \"300, 300\", \"300, 300\", \"0, 300\"]\n        },\n        transition: {\n          duration,\n          times: lineTimes,\n          ease: \"easeInOut\",\n          repeat: Infinity\n        }\n      }, `center-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)), diamond.map((d, i) => {\n        const next = diamond[(i + 1) % diamond.length];\n        return /*#__PURE__*/_jsxDEV(motion.line, {\n          x1: d.x,\n          y1: d.y,\n          x2: next.x,\n          y2: next.y,\n          stroke: \"black\",\n          strokeWidth: \"1.5\",\n          strokeDasharray: \"0, 400\",\n          animate: {\n            strokeDasharray: [\"0, 400\",\n            // hidden\n            \"400, 400\",\n            // draw\n            \"400, 400\",\n            // hold\n            \"0, 400\" // erase\n            ]\n          },\n          transition: {\n            duration,\n            times: lineTimes,\n            ease: \"easeInOut\",\n            repeat: Infinity,\n            delay: i * 0.15 // stagger each edge line\n          }\n        }, `edge-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      }), circle.map((cPos, i) => /*#__PURE__*/_jsxDEV(motion.circle, {\n        r: dotSize / 2,\n        fill: diamond[i].color,\n        initial: {\n          cx: cPos.x,\n          cy: cPos.y\n        },\n        animate: {\n          cx: [cPos.x, diamond[i].x, 0, cPos.x],\n          cy: [cPos.y, diamond[i].y, 0, cPos.y]\n        },\n        transition: {\n          duration,\n          ease: \"easeInOut\",\n          repeat: Infinity,\n          times: dotTimes\n        }\n      }, `dot-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: 0,\n        cy: 0,\n        r: centerSize / 2,\n        fill: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","motion","jsxDEV","_jsxDEV","App","size","dotSize","centerSize","duration","radius","Math","round","circle","Array","from","length","_","i","angle","PI","x","cos","y","sin","diamond","color","dotTimes","lineTimes","className","children","width","height","viewBox","map","d","line","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","animate","transition","times","ease","repeat","Infinity","fileName","_jsxFileName","lineNumber","columnNumber","next","delay","cPos","r","fill","initial","cx","cy","_c","$RefreshReg$"],"sources":["C:/Users/manup/Desktop/New folder/my-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./App.css\";\n\nexport default function App({\n  size = 300,\n  dotSize = 14,\n  centerSize = 12,\n  duration = 10, // longer cycle for clarity\n}) {\n  const radius = Math.round(size * 0.36);\n\n  // 8 circle positions\n  const circle = Array.from({ length: 8 }, (_, i) => {\n    const angle = (i * 45 * Math.PI) / 180;\n    return { x: Math.cos(angle) * radius, y: Math.sin(angle) * radius };\n  });\n\n  // diamond positions\n  const diamond = [\n    { x: 0, y: -radius, color: \"red\" },\n    { x: radius, y: 0, color: \"blue\" },\n    { x: 0, y: radius, color: \"purple\" },\n    { x: -radius, y: 0, color: \"orange\" },\n    { x: radius * 0.7, y: -radius * 0.7, color: \"blue\" },\n    { x: radius * 0.7, y: radius * 0.7, color: \"purple\" },\n    { x: -radius * 0.7, y: radius * 0.7, color: \"orange\" },\n    { x: -radius * 0.7, y: -radius * 0.7, color: \"red\" },\n  ];\n\n  // Timing for dots\n  const dotTimes = [0, 0.3, 0.9, 1];\n\n  // Timing for center lines\n  const lineTimes = [0.35, 0.5, 0.7, 0.85];\n\n  return (\n    <div className=\"app-container\">\n      <svg\n        className=\"overlay-svg\"\n        width={size}\n        height={size}\n        viewBox={`${-size / 2} ${-size / 2} ${size} ${size}`}\n      >\n        {/* Center → dot lines */}\n        {diamond.map((d, i) => (\n          <motion.line\n            key={`center-${i}`}\n            x1={0}\n            y1={0}\n            x2={d.x}\n            y2={d.y}\n            stroke={d.color}\n            strokeWidth=\"2\"\n            strokeDasharray=\"0, 300\"\n            animate={{\n              strokeDasharray: [\n                \"0, 300\",\n                \"300, 300\",\n                \"300, 300\",\n                \"0, 300\",\n              ],\n            }}\n            transition={{\n              duration,\n              times: lineTimes,\n              ease: \"easeInOut\",\n              repeat: Infinity,\n            }}\n          />\n        ))}\n\n        {/* Dot → next dot edge lines (sequential) */}\n        {diamond.map((d, i) => {\n          const next = diamond[(i + 1) % diamond.length];\n          return (\n            <motion.line\n              key={`edge-${i}`}\n              x1={d.x}\n              y1={d.y}\n              x2={next.x}\n              y2={next.y}\n              stroke=\"black\"\n              strokeWidth=\"1.5\"\n              strokeDasharray=\"0, 400\"\n              animate={{\n                strokeDasharray: [\n                  \"0, 400\",   // hidden\n                  \"400, 400\", // draw\n                  \"400, 400\", // hold\n                  \"0, 400\",   // erase\n                ],\n              }}\n              transition={{\n                duration,\n                times: lineTimes,\n                ease: \"easeInOut\",\n                repeat: Infinity,\n                delay: i * 0.15, // stagger each edge line\n              }}\n            />\n          );\n        })}\n\n        {/* Dots */}\n        {circle.map((cPos, i) => (\n          <motion.circle\n            key={`dot-${i}`}\n            r={dotSize / 2}\n            fill={diamond[i].color}\n            initial={{ cx: cPos.x, cy: cPos.y }}\n            animate={{\n              cx: [cPos.x, diamond[i].x, 0, cPos.x],\n              cy: [cPos.y, diamond[i].y, 0, cPos.y],\n            }}\n            transition={{\n              duration,\n              ease: \"easeInOut\",\n              repeat: Infinity,\n              times: dotTimes,\n            }}\n          />\n        ))}\n\n        {/* Center dot */}\n        <circle cx={0} cy={0} r={centerSize / 2} fill=\"black\" />\n      </svg>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}