{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manup\\\\Desktop\\\\New folder\\\\my-app\\\\src\\\\CircleAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./CircleAnimation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dots = 8;\nconst radius = 70;\nconst size = 220;\nconst getCirclePosition = (index, total, radius) => {\n  const angle = index / total * 2 * Math.PI;\n  return {\n    left: size / 2 + radius * Math.cos(angle),\n    top: size / 2 + radius * Math.sin(angle)\n  };\n};\nconst getDiamondPosition = index => {\n  const diamond = [{\n    x: 0,\n    y: -radius\n  }, {\n    x: radius / Math.SQRT2,\n    y: -radius / Math.SQRT2\n  }, {\n    x: radius,\n    y: 0\n  }, {\n    x: radius / Math.SQRT2,\n    y: radius / Math.SQRT2\n  }, {\n    x: 0,\n    y: radius\n  }, {\n    x: -radius / Math.SQRT2,\n    y: radius / Math.SQRT2\n  }, {\n    x: -radius,\n    y: 0\n  }, {\n    x: -radius / Math.SQRT2,\n    y: -radius / Math.SQRT2\n  }];\n  return {\n    left: size / 2 + diamond[index].x,\n    top: size / 2 + diamond[index].y\n  };\n};\nexport default function CircleDotsMotion() {\n  _s();\n  // Use 3 states: 0 - circle, 1 - diamond, 2 - center alignment\n  const [state, setState] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setState(prev => (prev + 1) % 3);\n    }, 3000); // switch every 3 seconds\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"circle-dots-container\",\n    style: {\n      marginTop: \"80px\",\n      position: \"relative\"\n    },\n    children: [[...Array(dots)].map((_, idx) => {\n      // Determine position based on current state\n      let pos;\n      if (state === 0) pos = getCirclePosition(idx, dots, radius);else if (state === 1) pos = getDiamondPosition(idx);else pos = {\n        left: size / 2,\n        top: size / 2\n      }; // center alignment\n\n      return /*#__PURE__*/_jsxDEV(motion.span, {\n        className: \"dot\",\n        animate: {\n          left: pos.left,\n          top: pos.top\n        },\n        transition: {\n          duration: 1.5,\n          type: \"spring\"\n        },\n        style: {\n          position: \"absolute\",\n          width: \"12px\",\n          height: \"12px\",\n          background: \"#111\",\n          borderRadius: \"50%\",\n          transform: \"translate(-50%, -50%)\"\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(motion.span, {\n      className: \"dot center-dot\",\n      style: {\n        position: \"absolute\",\n        width: \"12px\",\n        height: \"12px\",\n        background: \"#111\",\n        borderRadius: \"50%\",\n        left: size / 2,\n        top: size / 2,\n        transform: \"translate(-50%, -50%)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(CircleDotsMotion, \"rTLOxV2ROLFIFUMHWk9W3pFX53M=\");\n_c = CircleDotsMotion;\nvar _c;\n$RefreshReg$(_c, \"CircleDotsMotion\");","map":{"version":3,"names":["React","useState","useEffect","motion","jsxDEV","_jsxDEV","dots","radius","size","getCirclePosition","index","total","angle","Math","PI","left","cos","top","sin","getDiamondPosition","diamond","x","y","SQRT2","CircleDotsMotion","_s","state","setState","interval","setInterval","prev","clearInterval","className","style","marginTop","position","children","Array","map","_","idx","pos","span","animate","transition","duration","type","width","height","background","borderRadius","transform","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/manup/Desktop/New folder/my-app/src/CircleAnimation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./CircleAnimation.css\";\r\n\r\nconst dots = 8;\r\nconst radius = 70;\r\nconst size = 220;\r\n\r\nconst getCirclePosition = (index, total, radius) => {\r\n  const angle = (index / total) * 2 * Math.PI;\r\n  return {\r\n    left: size / 2 + radius * Math.cos(angle),\r\n    top: size / 2 + radius * Math.sin(angle),\r\n  };\r\n};\r\n\r\nconst getDiamondPosition = (index) => {\r\n  const diamond = [\r\n    { x: 0, y: -radius },\r\n    { x: radius / Math.SQRT2, y: -radius / Math.SQRT2 },\r\n    { x: radius, y: 0 },\r\n    { x: radius / Math.SQRT2, y: radius / Math.SQRT2 },\r\n    { x: 0, y: radius },\r\n    { x: -radius / Math.SQRT2, y: radius / Math.SQRT2 },\r\n    { x: -radius, y: 0 },\r\n    { x: -radius / Math.SQRT2, y: -radius / Math.SQRT2 },\r\n  ];\r\n  return {\r\n    left: size / 2 + diamond[index].x,\r\n    top: size / 2 + diamond[index].y,\r\n  };\r\n};\r\n\r\nexport default function CircleDotsMotion() {\r\n  // Use 3 states: 0 - circle, 1 - diamond, 2 - center alignment\r\n  const [state, setState] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setState((prev) => (prev + 1) % 3);\r\n    }, 3000); // switch every 3 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"circle-dots-container\"\r\n      style={{ marginTop: \"80px\", position: \"relative\" }}\r\n    >\r\n      {[...Array(dots)].map((_, idx) => {\r\n        // Determine position based on current state\r\n        let pos;\r\n        if (state === 0) pos = getCirclePosition(idx, dots, radius);\r\n        else if (state === 1) pos = getDiamondPosition(idx);\r\n        else pos = { left: size / 2, top: size / 2 }; // center alignment\r\n\r\n        return (\r\n          <motion.span\r\n            key={idx}\r\n            className=\"dot\"\r\n            animate={{\r\n              left: pos.left,\r\n              top: pos.top,\r\n            }}\r\n            transition={{ duration: 1.5, type: \"spring\" }}\r\n            style={{\r\n              position: \"absolute\",\r\n              width: \"12px\",\r\n              height: \"12px\",\r\n              background: \"#111\",\r\n              borderRadius: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n      {/* Center dot */}\r\n      <motion.span\r\n        className=\"dot center-dot\"\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"12px\",\r\n          height: \"12px\",\r\n          background: \"#111\",\r\n          borderRadius: \"50%\",\r\n          left: size / 2,\r\n          top: size / 2,\r\n          transform: \"translate(-50%, -50%)\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}