{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manup\\\\Desktop\\\\New folder\\\\my-app\\\\src\\\\DotsAnimation.js\",\n  _s = $RefreshSig$();\n// app.jsx\nimport React, { useState, useEffect } from 'react';\nimport '../app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DotsAnimation = () => {\n  _s();\n  const [activeLines, setActiveLines] = useState([]);\n  const dots = [{\n    id: 1,\n    x: 200,\n    y: 100,\n    color: 'purple'\n  }, {\n    id: 2,\n    x: 150,\n    y: 150,\n    color: 'red'\n  }, {\n    id: 3,\n    x: 250,\n    y: 150,\n    color: 'blue'\n  }, {\n    id: 4,\n    x: 100,\n    y: 200,\n    color: 'red'\n  }, {\n    id: 5,\n    x: 200,\n    y: 200,\n    color: 'black'\n  }, {\n    id: 6,\n    x: 300,\n    y: 200,\n    color: 'blue'\n  }, {\n    id: 7,\n    x: 150,\n    y: 250,\n    color: 'purple'\n  }, {\n    id: 8,\n    x: 250,\n    y: 250,\n    color: 'purple'\n  }, {\n    id: 9,\n    x: 200,\n    y: 300,\n    color: 'purple'\n  }];\n  const connections = [[1, 2], [1, 3], [2, 4], [2, 5], [3, 5], [3, 6], [4, 5], [5, 6], [4, 7], [5, 7], [5, 8], [6, 8], [7, 9], [8, 9]];\n  useEffect(() => {\n    const animateLines = () => {\n      setActiveLines([]);\n      connections.forEach((connection, index) => {\n        setTimeout(() => {\n          setActiveLines(prev => [...prev, `${connection[0]}-${connection[1]}`]);\n        }, index * 200);\n      });\n    };\n    animateLines();\n    const interval = setInterval(animateLines, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const getDot = id => dots.find(dot => dot.id === id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animation-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dots-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"400\",\n        height: \"400\",\n        className: \"connections-svg\",\n        children: connections.map(([start, end]) => {\n          const startDot = getDot(start);\n          const endDot = getDot(end);\n          const lineKey = `${start}-${end}`;\n          const isActive = activeLines.includes(lineKey);\n          return /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: startDot.x,\n            y1: startDot.y,\n            x2: endDot.x,\n            y2: endDot.y,\n            className: `connection ${isActive ? 'active' : ''}`\n          }, lineKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), dots.map(dot => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dot ${dot.color}`,\n        style: {\n          left: dot.x - 8,\n          top: dot.y - 8\n        }\n      }, dot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(DotsAnimation, \"Q/dOEYxT0VJOXrTNRkKBNlHAS/A=\");\n_c = DotsAnimation;\nexport default DotsAnimation;\nvar _c;\n$RefreshReg$(_c, \"DotsAnimation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DotsAnimation","_s","activeLines","setActiveLines","dots","id","x","y","color","connections","animateLines","forEach","connection","index","setTimeout","prev","interval","setInterval","clearInterval","getDot","find","dot","className","children","width","height","map","start","end","startDot","endDot","lineKey","isActive","includes","x1","y1","x2","y2","fileName","_jsxFileName","lineNumber","columnNumber","style","left","top","_c","$RefreshReg$"],"sources":["C:/Users/manup/Desktop/New folder/my-app/src/DotsAnimation.js"],"sourcesContent":["// app.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../app.css';\r\n\r\nconst DotsAnimation = () => {\r\n  const [activeLines, setActiveLines] = useState([]);\r\n\r\n  const dots = [\r\n    { id: 1, x: 200, y: 100, color: 'purple' },\r\n    { id: 2, x: 150, y: 150, color: 'red' },\r\n    { id: 3, x: 250, y: 150, color: 'blue' },\r\n    { id: 4, x: 100, y: 200, color: 'red' },\r\n    { id: 5, x: 200, y: 200, color: 'black' },\r\n    { id: 6, x: 300, y: 200, color: 'blue' },\r\n    { id: 7, x: 150, y: 250, color: 'purple' },\r\n    { id: 8, x: 250, y: 250, color: 'purple' },\r\n    { id: 9, x: 200, y: 300, color: 'purple' }\r\n  ];\r\n\r\n  const connections = [\r\n    [1, 2], [1, 3], [2, 4], [2, 5], [3, 5], [3, 6],\r\n    [4, 5], [5, 6], [4, 7], [5, 7], [5, 8], [6, 8],\r\n    [7, 9], [8, 9]\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const animateLines = () => {\r\n      setActiveLines([]);\r\n      connections.forEach((connection, index) => {\r\n        setTimeout(() => {\r\n          setActiveLines(prev => [...prev, `${connection[0]}-${connection[1]}`]);\r\n        }, index * 200);\r\n      });\r\n    };\r\n\r\n    animateLines();\r\n    const interval = setInterval(animateLines, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getDot = (id) => dots.find(dot => dot.id === id);\r\n\r\n  return (\r\n    <div className=\"animation-container\">\r\n      <div className=\"dots-wrapper\">\r\n        <svg width=\"400\" height=\"400\" className=\"connections-svg\">\r\n          {connections.map(([start, end]) => {\r\n            const startDot = getDot(start);\r\n            const endDot = getDot(end);\r\n            const lineKey = `${start}-${end}`;\r\n            const isActive = activeLines.includes(lineKey);\r\n\r\n            return (\r\n              <line\r\n                key={lineKey}\r\n                x1={startDot.x}\r\n                y1={startDot.y}\r\n                x2={endDot.x}\r\n                y2={endDot.y}\r\n                className={`connection ${isActive ? 'active' : ''}`}\r\n              />\r\n            );\r\n          })}\r\n        </svg>\r\n\r\n        {dots.map(dot => (\r\n          <div\r\n            key={dot.id}\r\n            className={`dot ${dot.color}`}\r\n            style={{\r\n              left: dot.x - 8,\r\n              top: dot.y - 8\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DotsAnimation;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMQ,IAAI,GAAG,CACX;IAAEC,EAAE,EAAE,CAAC;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAS,CAAC,EAC1C;IAAEH,EAAE,EAAE,CAAC;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAM,CAAC,EACvC;IAAEH,EAAE,EAAE,CAAC;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAO,CAAC,EACxC;IAAEH,EAAE,EAAE,CAAC;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAM,CAAC,EACvC;IAAEH,EAAE,EAAE,CAAC;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAQ,CAAC,EACzC;IAAEH,EAAE,EAAE,CAAC;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAO,CAAC,EACxC;IAAEH,EAAE,EAAE,CAAC;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAS,CAAC,EAC1C;IAAEH,EAAE,EAAE,CAAC;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAS,CAAC,EAC1C;IAAEH,EAAE,EAAE,CAAC;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAS,CAAC,CAC3C;EAED,MAAMC,WAAW,GAAG,CAClB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9C,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9C,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CACf;EAEDZ,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAGA,CAAA,KAAM;MACzBP,cAAc,CAAC,EAAE,CAAC;MAClBM,WAAW,CAACE,OAAO,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAK;QACzCC,UAAU,CAAC,MAAM;UACfX,cAAc,CAACY,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE,GAAGH,UAAU,CAAC,CAAC,CAAC,IAAIA,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACxE,CAAC,EAAEC,KAAK,GAAG,GAAG,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC;IAEDH,YAAY,CAAC,CAAC;IACd,MAAMM,QAAQ,GAAGC,WAAW,CAACP,YAAY,EAAE,IAAI,CAAC;IAChD,OAAO,MAAMQ,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,MAAM,GAAId,EAAE,IAAKD,IAAI,CAACgB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAAChB,EAAE,KAAKA,EAAE,CAAC;EAEtD,oBACEN,OAAA;IAAKuB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCxB,OAAA;MAAKuB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BxB,OAAA;QAAKyB,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC,KAAK;QAACH,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EACtDd,WAAW,CAACiB,GAAG,CAAC,CAAC,CAACC,KAAK,EAAEC,GAAG,CAAC,KAAK;UACjC,MAAMC,QAAQ,GAAGV,MAAM,CAACQ,KAAK,CAAC;UAC9B,MAAMG,MAAM,GAAGX,MAAM,CAACS,GAAG,CAAC;UAC1B,MAAMG,OAAO,GAAG,GAAGJ,KAAK,IAAIC,GAAG,EAAE;UACjC,MAAMI,QAAQ,GAAG9B,WAAW,CAAC+B,QAAQ,CAACF,OAAO,CAAC;UAE9C,oBACEhC,OAAA;YAEEmC,EAAE,EAAEL,QAAQ,CAACvB,CAAE;YACf6B,EAAE,EAAEN,QAAQ,CAACtB,CAAE;YACf6B,EAAE,EAAEN,MAAM,CAACxB,CAAE;YACb+B,EAAE,EAAEP,MAAM,CAACvB,CAAE;YACbe,SAAS,EAAE,cAAcU,QAAQ,GAAG,QAAQ,GAAG,EAAE;UAAG,GAL/CD,OAAO;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMb,CAAC;QAEN,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAELrC,IAAI,CAACsB,GAAG,CAACL,GAAG,iBACXtB,OAAA;QAEEuB,SAAS,EAAE,OAAOD,GAAG,CAACb,KAAK,EAAG;QAC9BkC,KAAK,EAAE;UACLC,IAAI,EAAEtB,GAAG,CAACf,CAAC,GAAG,CAAC;UACfsC,GAAG,EAAEvB,GAAG,CAACd,CAAC,GAAG;QACf;MAAE,GALGc,GAAG,CAAChB,EAAE;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxC,EAAA,CA1EID,aAAa;AAAA6C,EAAA,GAAb7C,aAAa;AA4EnB,eAAeA,aAAa;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}